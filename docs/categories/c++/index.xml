<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Tonghao</title>
    <link>http://localhost:1313/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Tonghao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Apr 2021 19:16:27 +0800</lastBuildDate><atom:link href="http://localhost:1313/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A simple thread pool in C&#43;&#43;</title>
      <link>http://localhost:1313/post/a-simple-thread-pool/</link>
      <pubDate>Sun, 25 Apr 2021 19:16:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/a-simple-thread-pool/</guid>
      <description>A simple thread pool based on, highly inspired by Easy3D
Implement a simple thread pool This thread pool is a consumer/producer queue without the consume API. Users produce task with Push API, which will be consumed by the threads(workers) of the pool.
The code is as follows:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87  #include &amp;lt;atomic&amp;gt;#include &amp;lt;cassert&amp;gt;#include &amp;lt;chrono&amp;gt;#include &amp;lt;functional&amp;gt;#include &amp;lt;future&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;memory&amp;gt;#include &amp;lt;mutex&amp;gt;#include &amp;lt;queue&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;thread&amp;gt;#include &amp;lt;type_traits&amp;gt;#include &amp;lt;utility&amp;gt;#include &amp;lt;vector&amp;gt; class ThreadPool { using task_type = std::function&amp;lt;void()&amp;gt;; public: ThreadPool(size_t num = std:ðŸ§µ:hardware_concurrency()) { for (size_t i = 0; i &amp;lt; num; ++i) { workers_.</description>
    </item>
    
    <item>
      <title>Profling windows application</title>
      <link>http://localhost:1313/post/profiling-windows-app/</link>
      <pubDate>Fri, 24 Jul 2020 19:16:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/profiling-windows-app/</guid>
      <description>Introduce tools for profiling msvc application.
Profiling Windows App Vsperf TODO Where is vsperf* tools for vs2019.These tools are not available form vs2019 page in the online documentation
VSDiagnostics?
[RAD] (http://www.radgametools.com/telemetry.htm) Tracy Reference  Measure app performance in Visual Studio Understand performance collection methods Measure application performance from the command line Command-line profiling tools reference  </description>
    </item>
    
    <item>
      <title>Crash dump analysis with windbg</title>
      <link>http://localhost:1313/post/crash-dump-analysis-with-windbg/</link>
      <pubDate>Mon, 13 Jan 2020 19:16:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/crash-dump-analysis-with-windbg/</guid>
      <description>Introduce basic steps for using windbg.
Steps of crash dump analysis with windbg .exr -1 The .exr command displays the contents of an exception record (a EXCEPTION_RECORD structure).
The EXCEPTION_RECORD structure contains the Instruction Address (the function raising the exception), the Exception Code, and (max 15) Exception Parameters.
0x80000003 is break point exception.
.lastevent displays the most recent exception or event that occurred.
!analyze -v .symopt+ 0x40 force load symbols</description>
    </item>
    
    <item>
      <title>Memory leak check on windows</title>
      <link>http://localhost:1313/post/memory-leak-check-on-windows/</link>
      <pubDate>Wed, 04 Dec 2019 19:16:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/memory-leak-check-on-windows/</guid>
      <description>Introduce some tools for memory checking for msvc.
Tools for detect memory check on windows  Visual c++ CRT library VLD for visual c++ Dr.Memory  </description>
    </item>
    
    <item>
      <title>QML overview</title>
      <link>http://localhost:1313/post/qml-overview/</link>
      <pubDate>Thu, 14 Nov 2019 19:16:27 +0800</pubDate>
      
      <guid>http://localhost:1313/post/qml-overview/</guid>
      <description>In this post, I want to make a clear framewok of QML language howerver, this post is far from completed, I will update this post when I have new things.
Overview of QML language In this post, I want to make a clear framewok of QML language howerver, this post is far from completed, I will update this post when I have new things.
Qt QML module is provides the QML engine and language infrastructure.</description>
    </item>
    
  </channel>
</rss>
